---
import { SEO } from "astro-seo";
import Junglestar from "../components/Junglestar.astro";
import Svgs from "../components/Svgs.astro";
import Nav from "../components/Nav.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import siteData from "../data/site.json";

export interface Props {
  title: string;
}

const { title } = Astro.props;

const Brand = siteData.title;
const Mission = siteData.content_is_about;

const canonicalURL = new URL(Astro.url.pathname, siteData.url).toString();
const siteURL = new URL(siteData.url).toString();

const makeTitle = title
  ? Brand + " | " + title
  : "Junglestar - your customers should understand you!";

const makeTitleOG = title
  ? Brand + ", " + Mission + ", " + title
  : "Junglestar - your customers should understand you!";

const resolvedImageWithDomain = new URL(
  "assets/p/og_large_image.jpg",
  siteData.url
).toString();
---

<!DOCTYPE html>
<html lang="en" prefix="og: http://ogp.me/ns#">
  <head>
    <Junglestar />

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <SEO
      title={makeTitle}
      description={siteData.description}
      canonical={canonicalURL}
      twitter={{
        creator: siteData.author.twitter,
        site: siteData.url,
        card: "summary_large_image",
      }}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: "website",
          title: makeTitleOG,
          image: resolvedImageWithDomain,
        },
        image: {
          secureUrl: resolvedImageWithDomain,
          alt: Mission,
        },
      }}
    />

    <meta name="keywords" content={siteData.keywords} />
  </head>
  <body>
    <Svgs />

    <Header />

    <Nav />

    <main>
      <slot />
    </main>

    <Footer />
    <style lang="scss" is:global>
      .hide {
        display: none;
      }
      body {
        margin: 0;
      }
      .outline_color {
        fill: black;
      }
      .fill_color {
        fill: var(--primary);
        &:hover {
          fill: var(--primary-hover);
        }
      }
      .show_on_phones {
        @media (min-width: 576px) {
          display: none !important;
        }
      }
      // breakpoints
      // @media (min-width: 576px) Min
      // @media (min-width: 768px) Bp1
      // @media (min-width: 992px) Bp2
      // @media (min-width: 1200px) Max
    </style>
  </body>
</html>
