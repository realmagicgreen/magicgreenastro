---
import { CollectionEntry, getCollection } from "astro:content";
import Article from "@layouts/Article.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const articles = await getCollection("health", ({ data }) => {
    return !data.draft && data.pubDate < new Date();
  });
  return articles.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const category = "health";

interface Props {
  post: CollectionEntry<typeof category>;
}

// 2. When it's time to render, you can get the entry directly from the prop
const { post } = Astro.props;
const { Content } = await post.render();

//add bottom listing of THIS category
const articles = await getCollection(category, ({ data }) => {
  return !data.draft && data.pubDate < new Date();
});
---

<Article {...post.data} cssBodyClass={category}>
  <ul class="tags">
    {
      post.data.tags.map((tag) => {
        return (
          <li>
            <a class="sanchez" href={`/${category}/${tag.toLowerCase()}/`}>
              {tag}
            </a>
          </li>
        );
      })
    }
  </ul>

  <Content />

  <div class="nav">
    <div class="h4 uppercase nav_title">other {category} articles</div>
    <div class="nav_items">
      {
        articles.map((post) => (
          <div class="uppercase">
            <a href={`/${category}/${post.slug}`}>{post.data.title}</a>
          </div>
        ))
      }
    </div>
  </div>
</Article>

<style lang="scss">
  .nav {
    padding: 5rem 1rem 1rem 1rem !important;
    padding-top: 5rem;
  }
  .nav_items a {
    height: 48px;
    display: block;
  }
  .nav_title {
    padding-bottom: 0.5rem;
  }
  .tags {
    max-width: none !important;
    li {
      display: inline-block;
      padding-right: 1rem;
    }
  }

  .post_content ul li {
    list-style-type: none !important;
  }
</style>
